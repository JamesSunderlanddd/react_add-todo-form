{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["users","id","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","todos","userId","title","completed","UserInfo","user","className","TodoInfo","todo","TodoList","map","preparedTodos","find","App","state","todosList","taskText","selectedUser","hasUserSelectedMessage","titleIsEmpty","clearForm","setState","validateForm","handleTitleInput","event","target","value","handleSelectField","findUser","currentUser","addTodo","createdTodo","length","this","onSubmit","preventDefault","type","size","placeholder","onChange","disabled","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50efb4cb.chunk.js","sourcesContent":["const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import React from 'react';\n\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <div className=\"todoList__userNameContacts\">\n      <h3 className=\"todoList__name\">{user.name}</h3>\n      <p className=\"todoList__email\">{user.email}</p>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <div className=\"todoList__info\">\n      <h2 className=\"todoList__title\">{todo.title}</h2>\n      <p className=\"todoList__completion\">\n        {todo.completed\n          ? <span className=\"todoList__completion--completed\">Status: Completed</span>\n          : <span className=\"todoList__completion--not_completed\">Status: Not completed</span>}\n      </p>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { Todo } from '../../types/Todo';\nimport './TodoList.scss';\n\nimport { UserInfo } from '../UserInfo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <div className=\"todoList\">\n      <ul className=\"todoList__list\">\n        {todos.map((todo) => {\n          return (\n            <li className=\"todoList__item\" key={todo.id}>\n              <TodoInfo todo={todo} />\n              {todo.user\n                ? <UserInfo user={todo.user} />\n                : <UserInfo user={{ name: 'No Name Yet', email: 'No Email Yet', id: 1 }} />}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\n\nimport users from './api/users';\nimport todos from './api/todos';\n\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nconst preparedTodos = todos.map((todo) => {\n  return {\n    ...todo,\n    user: users.find(user => user.id === todo.userId) || null,\n  };\n});\n\ntype State = {\n  todosList: Todo[],\n  taskText: string,\n  selectedUser: string,\n  hasUserSelectedMessage: boolean,\n  titleIsEmpty: boolean,\n\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    todosList: [...preparedTodos],\n    taskText: '',\n    selectedUser: '',\n    hasUserSelectedMessage: false,\n    titleIsEmpty: false,\n  };\n\n  clearForm = () => {\n    this.setState({ taskText: '', selectedUser: '' });\n  };\n\n  validateForm = () => {\n    this.setState(state => ({ hasUserSelectedMessage: state.taskText === '' }));\n    this.setState(state => ({ titleIsEmpty: state.taskText === '' }));\n  };\n\n  handleTitleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      taskText: event.target.value,\n      titleIsEmpty: false,\n    });\n  };\n\n  handleSelectField = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({\n      selectedUser: event.target.value,\n      hasUserSelectedMessage: false,\n    });\n  };\n\n  findUser = () => {\n    const { selectedUser } = this.state;\n\n    const currentUser: User | null\n      = users.find((user) => user.name === selectedUser) || null;\n\n    if (!currentUser) {\n      return null;\n    }\n\n    return currentUser;\n  };\n\n  addTodo = () => {\n    const currentUser = this.findUser();\n\n    const createdTodo = {\n      userId: 1,\n      id: this.state.todosList.length + 1,\n      title: this.state.taskText,\n      completed: false,\n      user: currentUser,\n    };\n\n    this.setState(({ todosList }) => ({ todosList: [...todosList, createdTodo] }));\n\n    this.clearForm();\n  };\n\n  render() {\n    const {\n      todosList, taskText, selectedUser, hasUserSelectedMessage, titleIsEmpty,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">Add todo form</h1>\n        <form onSubmit={event => event.preventDefault()}>\n          <div className=\"App__taskTitle\">\n            <input\n              type=\"text\"\n              size={22}\n              value={taskText}\n              placeholder=\"Please enter the title\"\n              onChange={this.handleTitleInput}\n            />\n            <p className={titleIsEmpty ? 'App__warning-text' : 'App__warning-text--none'}>\n              Please enter the title!\n            </p>\n            <p className={titleIsEmpty ? 'App__warning-text--none' : 'App__warning-text--no-warning'}>\n              No Warnings Right Now!\n            </p>\n          </div>\n          <div className=\"App__select\">\n            <select\n              value={selectedUser}\n              onChange={this.handleSelectField}\n            >\n              <option value=\"\" disabled={selectedUser !== ''}>Choose a user</option>\n              {users.map((user) => {\n                return (\n                  <option\n                    key={user.id}\n                    value={user.name}\n                  >\n                    {user.name}\n                  </option>\n                );\n              })}\n\n            </select>\n            <p className={hasUserSelectedMessage ? 'App__warning-text' : 'App__warning-text--none'}>\n              Please choose a user!\n            </p>\n            <p className={hasUserSelectedMessage ? 'App__warning-text--none' : 'App__warning-text--no-warning'}>\n              No Warnings Right Now!\n            </p>\n          </div>\n          <button className=\"App__add-button\" type=\"submit\" onClick={selectedUser && taskText ? this.addTodo : this.validateForm}>\n            Add\n          </button>\n          <TodoList todos={todosList} />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}